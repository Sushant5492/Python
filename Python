# Print a message
print("Hello world")

# Get user input for a and b
a = int(input("Enter a number: "))
b = int(input("Enter another number: "))

# Check if a is equal to b
print("a is equal to b:", a == b)

# Calculate the remainder of a divided by b
print("a divided by b leaves a remainder of:", a /b)

# Print the type of variable a
a = 22.01
b = type(a)
print(b)

# String slicing and length
name = "sushant"
print(name[2:7])  # Prints: shant
print(len(name))  # Prints: 7

# Negative indexing and slicing
print(name[-6:-2])  # Prints: usha
print(name[1:5])  # Prints: usha

# Slicing and length
print(name[:-2])  # Prints: sushan
print(name[:3])  # Prints: sus
print(name[0:5:2])  # Prints: suht

# String methods
a = "sushant shinde"
print(a.startswith("s"))  # Prints: True
print(a.endswith("nt"))  # Prints: True
print(a.endswith("e"))  # Prints: False
print(a.capitalize())  # Prints: Sushant shinde
print(a.find("h"))  # Prints: 4
print(a.replace("s", "ss"))  # Prints: ssushant sschine
print(a.count("s"))  # Prints: 2

# User input and formatting
a = input("Enter your name: ")
c = input("Enter a date: ")
print(f"Good afternoon {a}")
letter = f'''"{a}" You are selected! {c}'''
print(letter)

# String manipulation
a = "sushant is a \"good boy\", not a bad boy."
print(a)
print(a.find(" "))  # Prints: 7
print(a.replace(" ", "_"))  # Prints: sushant_is_a_"good_boy",_not_a_bad_boy.

# Multiline string
a = "sushant, \n\t good evening! \n Thank u."
print(a)

# 11/08/2024
# Create a list with mixed data types
a = ["sushant", "prashant", "sandeep", 7, 11.12]
print(a[4])  # Prints: 11.12

# Modify the list
a[3] = 9
print(a)  # Prints: ["sushant", "prashant", "sandeep", 9, 11.12]

# Get the length of the list
b = len(a)
print(b)  # Prints: 5

# Access list elements
print(a[3])  # Prints: 9
print(a[1:4])  # Prints: ["prashant", "sandeep", 9]

# Create a new list of integers
a = [1, 33, 20, 22, 2092, 10, 90]

# Sort the list in ascending order
a.sort()
print(a)  # Prints: [1, 10, 20, 22, 33, 90, 2092]

# Append an element to the list
a.append(2002)
print(a)  # Prints: [1, 10, 20, 22, 33, 90, 2092, 2002]

# Reverse the list
a.reverse()
print(a)  # Prints: [2002, 2092, 90, 33, 22, 20, 10, 1]

# Insert an element at a specific position
a.insert(1, 33333333)
print(a)  # Prints: [2002, 33333333, 2092, 90, 33, 22, 20, 10, 1]

# Remove an element from the list
a.pop(0)
print(a)  # Prints: [33333333, 2092, 90, 33, 22, 20, 10, 1]

# Sort the list again
a.sort()
print(a)  # Prints: [1, 10, 20, 22, 33, 90, 2092, 33333333]

# Remove a specific element
a.remove(33333333)
print(a)  # Prints: [1, 10, 20, 22, 33, 90, 2092]

# Create an empty tuple
a = ()
print(type(a))  # Prints: <class 'tuple'>

# Create a tuple with integers
b = (11, 111, 23, 393, 9289, 11)
print(b.count(11))  # Prints: 2
print(b.index(393))  # Prints: 3
print(len(b))  # Prints: 6

# Create an empty list for fruits
fruits = []

# Get user input for fruits and append to the list
for i in range(5):
    a = input("Enter a fruit's name: ")
    fruits.append(a)
# Print the list of fruits
print(fruits)

# Create an empty list for student marks
student_marks = []

# Get user input for marks and append to the list
for i in range(6):
    a = int(input("Enter Your Marks: "))
    student_marks.append(a)

# Sort the list in ascending order
student_marks.sort()
print(student_marks)

# Create a tuple with mixed data types
a = (11, 2, "ss", "sushant", 11.11)
b = a.index(11.11)
print(b)  # Prints: 4

# Create a list of integers
marks = [11, 2334, 2442, 2246]

# Access list elements
a = marks[0]
b = marks[1]
c = marks[2]
d = marks[3]

# Calculate the sum of list elements
total = a + b + c + d
print(total)

# Use the built-in sum function to calculate the total
print(sum(marks))


# Create a tuple with integers
my_tuple = (7, 0, 8, 0, 0, 9)

# Count the occurrences of 0 in the tuple
count_zero = my_tuple.count(0)

# Print the tuple
print(my_tuple)

# Print the count of 0 in the tuple
print(f"0 in the tuple is {count_zero} times")

# Create a dictionary with mixed key-value pairs
marks = {
    "sushant": 100,
    "prashant": 90,
    "sangmeshwar": 80,
    10: "swapnil"
}

# Print the type of the dictionary
print(type(marks))  # Prints: <class 'dict'>

# Access a value using its key
print(marks[10])  # Prints: swapnil

# Print all key-value pairs as tuples
print(marks.items())  
# Prints: dict_items([('sushant', 100), ('prashant', 90), ('sangmeshwar', 80), (10, 'swapnil')])

# Print all keys
print(marks.keys())  
# Prints: dict_keys(['sushant', 'prashant', 'sangmeshwar', 10])

# Print all values
print(marks.values())  
# Prints: dict_values([100, 90, 80, 'swapnil'])

# Update the dictionary with new key-value pairs
marks.update({"sushant": 98, "sandeep": 95})
marks.update({11: "manoj"})

# Print the updated dictionary
print(marks)  
# Prints: {'sushant': 98, 'prashant': 90, 'sangmeshwar': 80, 10: 'swapnil', 'sandeep': 95, 11: 'manoj'}

# Use the get method to access a value
print(marks.get(11))  # Prints: manoj
print(marks.get(115))  # Prints: None

# Create a set with mixed data types
a = {11, 2, 2, 2, 3, 3, 46, 8, 98, 9, 9, 8, 8, 5, 3}
print(type(a))  # Prints: <class 'set'>
print(a)  # Prints: {11, 2, 3, 46, 8, 98, 9, 5}

# Add a string to the set
a.add("sushant")
print(a)  # Prints: {11, 2, 3, 46, 8, 98, 9, 5, 'sushant'}

# Get the length of the set
print(len(a))  # Prints: 10

# Remove an element from the set
a.remove(98)
print(a)  # Prints: {11, 2, 3, 46, 8, 9, 5, 'sushant'}

# Pop an element from the set
b = a.pop()
print(b)  # Prints: 11 (or any other element)
print(a)  # Prints: {2, 3, 46, 8, 9, 5, 'sushant'}

# Clear the set
a.clear()
print(a)  # Prints: set()

# Create new sets
a = {1, 23, 3, 22, 4, 65, 43, 39, 6}
b = {23, 3, 22, 174, 26488, 866, 190}
aa = {1, 39, 22, 24}
ba = {1, 39}

# Check if aa is a superset of {1, 22}
print(aa.issuperset({1, 22}))  # Prints: True

# Check if ba is a subset of aa
print(ba.issubset(aa))  # Prints: True

# Get the intersection of a and b
c = a.intersection(b)
print(c)  # Prints: {23, 3, 22}

# Get the union of a and b
d = a.union(b)
print(d)  # Prints: {1, 23, 3, 22, 4, 65, 43, 39, 6, 174, 26488, 866, 190}

# Get the difference of a and b
e = a - b
f = b - a
print(f)  # Prints: {174, 26488, 866, 190}
print(e)  # Prints: {1, 4, 65, 43, 39, 6}

# Create a dictionary
a = {"cap": "topi", "god": "bhagavan", "slow": "dihere-dihire"}
print(a.keys())  # Prints: dict_keys(['cap', 'god', 'slow'])

# Get a value from the dictionary
b = input("Enter a word: ")
print(a[b])  # Prints: the value associated with the input key

# Create an empty set
a = set()

# Add an element to the set
b = input("Enter a value: ")
a.add(b)
print(a)  # Prints: {b}

# Add another element to the set
C = input("Enter a number: ")
a.add(int(C))
print(a)  # Prints: {b, int(C)}
# Create an empty set
s = set()

# Add elements to the set
n = input("Enter a number: ")
s.add(n)
n = input("Enter a number: ")
s.add(n)
n = input("Enter a number: ")
s.add(n)
n = input("Enter a number: ")
s.add(n)

# Print the set
print(s)

# Create another set
set1 = set()

# Add elements to the set
set1.add(20)
set1.add(20.0)
set1.add("20")

# Print the set
print(set1)

# Print the length of the set
print(len(set1))

# Create a dictionary
set2 = {}

# Check the type of set2
print(type(set2))

# Create an empty dictionary
d = {}

# Get user input and update the dictionary
name = input("Enter your name: ")
lang = input("Enter your favorite language: ")
d.update({name: lang})

# Create an empty tuple
a = ()

# Check the type of a
print(type(a))

# Print the dictionary
print(d)

#if else & else if

# Program 1: Eligibility to Vote

age = int(input("Enter your age: "))

if age >= 18:
    print("You are eligible to vote.")
else:
    print("You are not eligible to vote.")


# Program 2: Grade Based on Score

score = int(input("Enter your score: "))

if score >= 90:
    print("Your grade is A.")
elif score >= 80:
    print("Your grade is B.")
elif score >= 70:
    print("Your grade is C.")
elif score >= 60:
    print("Your grade is D.")
else:
    print("Your grade is F.")


# Program 3: Eligibility to Apply

age = int(input("Enter your age: "))
score = int(input("Enter your score: "))

if age >= 18 and score >= 80:
    print("You are eligible to apply.")
else:
    print("You are not eligible to apply.")


# Ternary Operator
x = 5
result = "x is greater" if x > 10 else "x is less"

# Conditional Expression with if
x = 5
if x > 10:
    result = "x is greater"
else:
    result = "x is less"

# Conditional Expression with elif
x = 5
if x > 10:
    result = "x is greater"
elif x == 5:
    result = "x is equal to 5"
else:
    result = "x is less"

# Conditional Expression with and, or, not
x = 5
y = 3
if x > 10 and y < 5:
    result = "x is greater and y is less"
elif x > 10 or y < 5:
    result = "x is greater or y is less"
else:
    result = "x is less and y is greater"

# Conditional Expression with in, not in
fruits = ["apple", "banana", "cherry"]
x = "banana"
if x in fruits:
    result = "x is in fruits"
else:
    result = "x is not in fruits"

# Conditional Expression with ==, !=, >, <, >=, <=
x = 5
y = 3
if x == y:
    result = "x is equal to y"
elif x != y:
    result = "x is not equal to y"
elif x > y:
    result = "x is greater than y"
elif x < y:
    result = "x is less than y"
elif x >= y:
    result = "x is greater than or equal to y"
elif x <= y:
    result = "x is less than or equal to y"

username = input("Enter username: ")

if len(username) < 10:
    print("Your username contains less than 10 characters")
else:
    print("Your username contains more than 10 characters")

p1 = "Make a lot of money"
p2 = "buy now"
p3 = "subscribe this"
p4 = "click this"

message = input("Enter your comment: ")

if (p1 in message) or (p2 in message) or (p3 in message) or (p4 in message):
    print("This comment is a spam")
else:
    print("This comment is not a spam")

marks1 = int(input("Enter Marks 1: "))
marks2 = int(input("Enter Marks 2: "))
marks3 = int(input("Enter Marks 3: "))

total_percentage = (100 * (marks1 + marks2 + marks3)) / 300

if (total_percentage >= 40 and marks1 >= 33 and marks2 >= 33 and marks3 >= 33):
    print("You are passed:", total_percentage)
else:
    print("You failed, try again next year:", total_percentage)
